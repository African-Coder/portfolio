{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/appointments/book-patients.component.ts","./src/app/appointments/book-patients.component.html","./src/app/appointments/list-patients.component.ts","./src/app/appointments/list-patients.component.html","./src/app/appointments/patient.service.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'firstQApp';\n}\n","<div class=\"container\">\n  <nav class=\"navbar navbar-default\">\n    <a class=\"navbar-brand\">Clinic Booking Service For Patient</a>\n    <ul class=\"nav navbar-nav\">\n      <li class=\"active\">\n        <a routerLinkActive=\"active\" routerLink=\"list\">List</a>\n      </li>\n      <li>\n        <a routerLinkActive=\"active\" routerLink=\"edit/0\">Book</a>\n      </li>\n    </ul>\n  </nav>\n  <router-outlet></router-outlet>\n</div>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { ListPatientsComponent } from './appointments/list-patients.component';\nimport { BookPatientsComponent } from './appointments/book-patients.component';\nimport { PatientService } from './appointments/patient.service';\nimport { HttpClientModule } from '@angular/common/http';\n\n\nconst appRoutes: Routes = [\n  { path: 'list', component: ListPatientsComponent },\n  { path: 'edit/:id', component: BookPatientsComponent},\n  { path: '', redirectTo: '/list', pathMatch: 'full' }\n  \n];\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    ListPatientsComponent,\n    BookPatientsComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    RouterModule.forRoot(appRoutes),\n    HttpClientModule,\n    FormsModule,\n    ReactiveFormsModule\n  ],\n  providers: [PatientService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { ActivatedRoute } from '@angular/router';\nimport { Router } from '@angular/router';\nimport { Patient } from '../models/patient';\nimport { PatientService } from './patient.service';\nimport { HttpClient } from '@angular/common/http';\n\n\n@Component({\n  selector: 'app-book-patients',\n  templateUrl: './book-patients.component.html',\n  styleUrls: ['./book-patients.component.css']\n})\nexport class BookPatientsComponent implements OnInit {\n\n  @ViewChild('bookingForm') public bookingForm!: NgForm;\n\n  user : any = {\n  };\n\n  constructor(private _addPatientService: PatientService,\n    private _route: ActivatedRoute,\n    private _router: Router,\n    private _http : HttpClient) { }\n\n  ngOnInit(): void {\n\n    this._route.paramMap.subscribe(params => {\n      const id = params.get('id');\n      this.getPatient(id);\n    });\n\n  }\n\n  private getPatient(id: any) { //accepts index from edit() to refill/reuse form\n   \n    if (id == 0) {\n      this.user = {\n        id: null,\n        fullName: null,\n        address: null,\n        sex: null,\n        reason: null\n      }\n    }\n    else {\n      this.user = this._addPatientService.getPatient(id).subscribe(\n        (data: any) => {\n          this.user = {\n            id: data[0].patID,\n            fullName: data[0].fullName,\n            address: data[0].address,\n            sex: data[0].sex,\n            reason: data[0].reason\n          }\n        }\n      );\n    \n    }\n  }\n\n  saveBooking(): void {\n    if (this.user.id == null) {\n      this.user.id = 0;\n      this._addPatientService.savePatient(this.user).subscribe(\n        (data: any) => {\n          console.log('saved data: ' + data);\n          this.bookingForm.reset();\n          this._router.navigate(['list']);\n\n        },\n        (error: any) => console.log(error)\n      );\n\n\n    }\n    else {\n      console.log(this.user);\n      console.log('inside');\n      this._addPatientService.updatePatient(this.user).subscribe(\n        (data : any) => {\n          console.log('inside2');\n          this.user = {\n            id : data[0].patID,\n            fullName: data[0].fullName,\n            address: data[0].address,\n            sex: data[0].sex,\n            reason: data[0].reason\n          }\n          console.log('inside');\n          this.bookingForm.resetForm();\n          this._router.navigate(['list']);\n        }\n      )\n    }\n  }\n\n}\n","<form #bookingForm=\"ngForm\" (ngSubmit)=\"saveBooking()\" class=\"form-horizontal\">\n    <div class=\"jumbotron jumbotron-primary\">\n        <div class=\"panel panel-primary\">\n            <div class=\"panel-heading\">\n                <h3 class=\"panel-title\">Create A Booking For Patient</h3>\n            </div>\n\n            <div class=\"panel-body\">\n                <div class=\"form-group\">\n                    <label class=\"col-sm-2 control-label\" for=\"fullName\">Full Name:</label>\n                    <div class=\"col-sm-4\">\n                        <input id=\"fullName\" name=\"fullName\" [(ngModel)]=user.fullName #fullNameControl=\"ngModel\" type=\"text\" class=\"form-control\">\n                    </div>\n                </div>\n                <div class=\"form-group\">\n                    <label class=\"col-sm-2 control-label\" for=\"address\">Home Address:</label>\n                    <div class=\"col-sm-4\">\n                        <input id=\"address\" name=\"address\" [(ngModel)]=user.address #addressControl=\"ngModel\" type=\"text\" class=\"form-control\">\n                    </div>\n                </div>\n                <div class=\"form-group\">\n                    <label class=\"col-sm-2 control-label\" for=\"sex\">Sex:</label>\n                    <div class=\"col-sm-4\">\n                        <select id=\"sex\" name=\"sex\" [(ngModel)]=user.sex #sexControl=\"ngModel\" class=\"form-control\">\n                                <option value=\"Female\">Female</option>\n                                <option value=\"Male\">Male</option>\n                        </select>\n                    </div>\n                </div>\n\n                <div class=\"form-group\">\n                        <label class=\"col-sm-2 control-label\" for=\"reason\">Reason For Booking </label>\n                        <div class=\"col-sm-4\">\n                    <select id=\"reason\" name=\"reason\" [(ngModel)]=user.reason #reasonControl=\"ngModel\" class=\"form-control\">\n                        <option value=\"Monthly Appointment\">Monthly Appointment</option>\n                            <option value=\"Collection\">Collection</option>\n                            <option value=\"Blood Test\">Blood Test</option>\n                            <option value=\"Baby CheckUp\">Baby CheckUp</option>\n                            <option value=\"Covid-19 Test\">Covid-19 Test</option>\n                            <option value=\"Monkey Pox Test\">Monkey Pox Test</option>\n                            <option value=\"Open New File\">Open New File</option>\n                            <option value=\"Elderly Patient\">Elderly Patient</option>\n                      </select>\n                    </div>\n                </div>\n\n                <div class=\"panel-footer\">\n                    <button type=\"submit\" class=\"btn btn-primary\">Book Appointment</button>\n                    <h6 class=\"text-center\"><a href=\"/\"><i class=\"fa fa-home\"></i> Home</a> | <a href=\"\">Privacy Policy</a>\n                    </h6>\n                    <h6 class=\"text-center\">© Copyright &nbsp;</h6>\n                </div>\n            </div>\n        </div>\n    </div>\n</form>\n<!-- Check:{{bookingForm.value | json}} -->","import { Component, OnInit, Input } from '@angular/core';\nimport { Patient } from '../models/patient';\nimport { PatientService } from './patient.service';\nimport { Router } from '@angular/router';\nimport { HttpClient } from '@angular/common/http';\n\n@Component({\n  selector: 'app-list-patients',\n  templateUrl: './list-patients.component.html',\n  styleUrls: ['./list-patients.component.css']\n})\nexport class ListPatientsComponent implements OnInit {\n\n  patients: any[] = [];\n\n  sortedPatients : any[];\n\n  private _searchItem : any;\n  get searchItem() : any {\n    return this._searchItem;\n  }\n  set searchItem(value : any) {\n    this._searchItem = value;\n    this.sortedPatients = this.sortPat(value);\n  }\n  \n  sortPat(searchTerm : string) {\n    return this.patients.filter(pat =>\n      pat.fullName.toLowerCase().indexOf(searchTerm.toLowerCase()) !== -1);\n  }\n\n\n  // id: string = '';\n  // fullName: string = '';\n  // address: string = '';\n  // sex: string = '';\n  // // photoPath: string = '';\n\n  // patientList: any[] = [];\n\n\n  @Input() patient!: Patient;\n\n  constructor(private _patientService: PatientService,\n              private _router: Router,\n              private _http: HttpClient) { }\n\n  ngOnInit(): void {\n\n    this._patientService.getPatients() //Use the patient service to connect to database\n   .subscribe(data => {\n     this.patients = data; \n     \n     this.sortedPatients = this.patients; //this allows on first load for patients to be added to filtering array\n\n     console.log(this.patients);\n    }); //subscribe data from service to patients array\n\n     \n  }\n\n  editPatient(index : number) {\n    this._router.navigate(['/edit', index]);\n    console.log('index '+ (index));\n  }\n\n}\n","<div class=\"jumbotron jumbotron-primary\">\n    <div class=\"form-group\">\n        <input type=\"text\" class=\"form-control\" placeholder=\"Search By Name\"\n        style=\"width:400px\" [(ngModel)]=\"searchItem\" />\n    </div>\n    <div class=\"panel panel-primary\" *ngFor=\"let patient of sortedPatients | keyvalue\">\n        <div class=\"panel-heading\">\n            <h3 class=\"panel-title\">{{patient.value.fullName}} ID:{{patient.value.patID}}</h3>\n        </div>\n        <div class=\"panel-body\">\n            <div class=\"col-xs-10\">\n                <div class=\"row vertical-align\">\n                    <div class=\"col-xs-6\">\n                        <img class=\"imgClass\" [src]=\"patient.value.photoPath\" />\n                    </div>\n                     <div class=\"col-xs-8\">\n\n                        <div class=\"row\">\n                            <div class=\"col-xs-6\">\n                                Address\n                            </div>\n                            <div class=\"col-xs-6\">\n                                :{{patient.value.address}}\n                            </div>\n                        </div>\n\n                        <div class=\"row\">\n                                <div class=\"col-xs-6\">\n                                    Sex\n                                </div>\n                                <div class=\"col-xs-6\">\n                                    :{{patient.value.sex}}\n                                </div>\n                            </div>\n\n                            <div class=\"row\">\n                                    <div class=\"col-xs-6\">\n                                        Reason for booking\n                                    </div>\n                                    <div class=\"col-xs-6\">\n                                        :{{patient.value.reason}}\n                                    </div>\n                                </div>\n\n                    </div>\n                </div>\n            </div>\n        </div>\n        <div class=\"panel-footer\">\n            <button class=\"btn btn-primary\" >View Patient</button>\n            <button class=\"btn btn-primary\" (click)=\"editPatient(patient.value.patID)\">Edit Patient</button>\n            <button class=\"btn btn-danger\" >Delete Patient</button>\n        </div>\n    </div>\n\n    <!-- div *ngFor=\"let item of testObject | keyvalue\">\n    Key: <b>{{item.key}}</b> and Value: <b>{{item.value}}</b>\n</div> -->","import { Injectable } from '@angular/core';\nimport { Patient } from '../models/patient';\nimport { HttpClient, HttpErrorResponse, HttpHeaders } from '@angular/common/http';\nimport 'rxjs/add/operator/catch';\nimport { Observable, throwError } from 'rxjs';\nimport { catchError, map } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PatientService {\n\n  constructor(private _httpClient : HttpClient) { }\n\n  private _url = 'http://localhost:3001/patients'; //url of database s\n  private _baseUrl = 'http://localhost:3001/patients';\n\n  private handleError(errorResponse: HttpErrorResponse) {\n    if(errorResponse.error instanceof ErrorEvent) {\n        console.log('Client Side Error', errorResponse.error.message)\n    }else {\n        console.log('Server Side Error', errorResponse);\n    }\n    \n    return throwError('There is an interruption of service, try again later');\n}\n\n  getPatients() {\n    return this._httpClient.get<any>(`${this._url}`).catch(this.handleError); //get function to retrieve data from database\n}\n\n//Creates New Patient record\n    //savePatient function calls post method \n    savePatient(patient)  {\n      return this._httpClient.post(this._baseUrl, patient);\n  \n  }\n\n  updatePatient(patient: any) \n    {\n        const httpHeaders = new HttpHeaders()\n            .set('content-type', 'application/json')\n            .set('Access-Control-Allow-Origin', '*');\n            console.log('?!');\n            console.log(patient.id);\n        \n        return this._httpClient.put('http://localhost:3001/patients/' + patient.id , patient, { 'headers': httpHeaders}).catch(this.handleError);\n    }\n\n    getPatient(id: number)  {\n        return this._httpClient.get<any>(`${this._baseUrl}/${id}`).catch(this.handleError);  //get function to retrieve 1 from database\n    }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}